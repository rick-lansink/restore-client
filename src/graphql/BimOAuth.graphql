query userProjects {
    Project {
        projectId
        dueDate
        name
        SearchRequests {
            id
            name
        }
    }
}

query getOAuthToken($projectId: String!) {
    UserProjectAuth(where: {projectId: {_eq: $projectId}}) {
        oauthCode
    }
}

mutation syncOAuth($poid: String!, $token: String!, $internalId: uuid!) {
    update_Project(where: {
        internalId: {_eq: $internalId}
    }, _set: {
        projectId: $poid
    }) {
        affected_rows
    }
    insert_UserProjectAuth(objects: {
        oauthCode: $token
        projectId: $poid
    }, on_conflict: {
        constraint: UserProjectAuth_pkey,
        update_columns: oauthCode
    }) {
        affected_rows
    }
}